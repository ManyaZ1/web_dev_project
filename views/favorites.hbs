<link rel="stylesheet" href="/css/favorites.css">

<div class="page-container">
    <div class="favorites-header">
        <h2>💖</h2>
        <h2 class="favorites-title">Your Favourite Flights</h2>
    </div>

    {{#if favorites.length}}
    <div class="favorites-grid">
        {{#each favorites}}
        <div class="favorite-card" id="fav-{{this.id}}">
            <div class="card-inner">
                <div class="card-front">
                    <h3 class="destination-title">To: {{this.destination}}</h3>
                    <p class="flight-info">From: <strong>{{this.origin}}</strong></p>
                    <p class="flight-info">Departure: <strong>{{this.time_departure}}</strong></p>
                    <p class="price-info">💰 Price: <strong>${{this.price}}</strong></p>
                    <button class="remove-btn" 
                        onclick="removeFavorite('{{this.id}}', '{{this.flight_id}}', '{{this.airline_id}}')">
                        ❤️ Remove
                    </button>
                </div>
            </div>
        </div>
        {{/each}}
    </div>
    {{else}}
    <p class="no-favorites">You haven’t added any flights to your interest list yet!</p>
    {{/if}}
</div>

<script>
function removeFavorite(ticketId, flightId, airlineId) {
    fetch(`/api/favorites/remove?ticketId=${ticketId}&flightId=${flightId}&airlineId=${airlineId}`, { method: 'POST' })
        .then(res => res.json())
        .then(data => {
            if (data.success) {
                const card = document.getElementById(`fav-${ticketId}`);
                if (card) {
                    card.classList.add('removing');
                    setTimeout(() => card.remove(), 400);
                    heartBurst(card);
                }

                if (!document.querySelector('.favorite-card')) {
                    document.querySelector('.favorites-grid')?.remove();
                    const message = document.createElement('p');
                    message.className = 'no-favorites fade-in-card';
                    message.textContent = "You haven’t added any flights to your interest list yet!";
                    document.querySelector('.page-container').appendChild(message);
                }
            } else {
                showCustomToast("Failed to remove from favorites.");
            }
        })
        .catch(() => showCustomToast("Server error. Try again."));
}

function heartBurst(target) {
    for (let i = 0; i < 10; i++) {
        const particle = document.createElement('div');
        particle.className = 'heart-burst';
        document.body.appendChild(particle);

        const rect = target.getBoundingClientRect();
        particle.style.left = `${rect.left + rect.width / 2}px`;
        particle.style.top = `${rect.top + rect.height / 2}px`;

        const angle = Math.random() * 2 * Math.PI;
        const distance = 80 + Math.random() * 40;
        const x = Math.cos(angle) * distance;
        const y = Math.sin(angle) * distance;

        requestAnimationFrame(() => {
            particle.style.transform = `translate(${x}px, ${y}px) scale(1.5)`;
            particle.style.opacity = '0';
        });

        setTimeout(() => particle.remove(), 700);
    }
}

function showCustomToast(message) {
    let toast = document.createElement('div');
    toast.className = 'custom-toast';
    toast.textContent = message;
    document.body.appendChild(toast);

    setTimeout(() => toast.classList.add('visible'), 100);
    setTimeout(() => {
        toast.classList.remove('visible');
        setTimeout(() => toast.remove(), 300);
    }, 2000);
}
</script>
